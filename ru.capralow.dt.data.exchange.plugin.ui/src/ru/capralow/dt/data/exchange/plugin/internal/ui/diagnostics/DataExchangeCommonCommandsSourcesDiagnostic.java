package ru.capralow.dt.data.exchange.plugin.internal.ui.diagnostics;

import org.eclipse.emf.ecore.EObject;

import com._1c.g5.v8.dt.bsl.validation.CustomValidationMessageAcceptor;
import com._1c.g5.v8.dt.metadata.mdclass.Configuration;

/*
МодульОбменДаннымиПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиПовтИсп");
МодульОбменДаннымиСервер = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиСервер");

ВсеПланыОбменаБСП = МодульОбменДаннымиПовтИсп.ПланыОбменаБСП();
ОбщиеКомандыОбменаДанными = ОбщиеКомандыОбменаДанными();

Для Каждого ИмяПланаОбмена Из ВсеПланыОбменаБСП Цикл
	
	ПланОбмена = Метаданные.ПланыОбмена.Найти(ИмяПланаОбмена);
	Если МодульОбменДаннымиПовтИсп.ЭтоПланОбменаРаспределеннойИнформационнойБазы(ИмяПланаОбмена) Тогда
		СвойствоПроверки = "ДляОбменаРИБ";
	ИначеЕсли МодульОбменДаннымиСервер.ЭтоПланОбменаXDTO(ИмяПланаОбмена) Тогда
		СвойствоПроверки = "ДляУниверсальногоФорматаОбмена";
	ИначеЕсли Не МодульОбменДаннымиПовтИсп.ЭтоПланОбменаРаспределеннойИнформационнойБазы(ИмяПланаОбмена)
		И МодульОбменДаннымиПовтИсп.ЕстьМакетПланаОбмена(ИмяПланаОбмена, "ПравилаОбмена")
		И Не МодульОбменДаннымиСервер.ЭтоПланОбменаXDTO(ИмяПланаОбмена) Тогда
		СвойствоПроверки = "ДляОбменаПоПравиламКонвертации";
	ИначеЕсли Не МодульОбменДаннымиПовтИсп.ЭтоПланОбменаРаспределеннойИнформационнойБазы(ИмяПланаОбмена)
		И Не МодульОбменДаннымиПовтИсп.ЕстьМакетПланаОбмена(ИмяПланаОбмена, "ПравилаОбмена") Тогда
		СвойствоПроверки = "ДляУниверсальногоОбменаБезПравил";
	КонецЕсли;
	
	НедостающиеСостав = Новый Массив;
	ИзбыточныеСостав = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ОбщиеКомандыОбменаДанными Цикл
		
		ДолженБытьВключен = СтрокаТаблицы[СвойствоПроверки];
		Если ДолженБытьВключен = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ФактическиВключен = СтрокаТаблицы.СоставКоманды.Найти(ПланОбмена) <> Неопределено;
		
		Если ДолженБытьВключен И Не ФактическиВключен Тогда
			НедостающиеСостав.Добавить(СтрокаТаблицы.ИмяКоманды);
		ИначеЕсли Не ДолженБытьВключен И ФактическиВключен Тогда
			ИзбыточныеСостав.Добавить(СтрокаТаблицы.ИмяКоманды);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НедостающиеСостав.Количество() > 0 Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'План обмена должен быть включен в состав общих команд
				|%1'"), МаркированныйСписок(НедостающиеСостав));
		ДобавитьОшибку(ПланОбмена, НСтр("ru = 'План обмена не включен в состав команд'"), ТекстОшибки);
	КонецЕсли;
	
	Если ИзбыточныеСостав.Количество() > 0 Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'План обмена должен быть исключен из состава общих команд
				|%1'"), МаркированныйСписок(ИзбыточныеСостав));
		ДобавитьОшибку(ПланОбмена, НСтр("ru = 'План обмена избыточно включен в состав команд'"), ТекстОшибки);
	КонецЕсли;
	
КонецЦикла;
*/

public class DataExchangeCommonCommandsSourcesDiagnostic implements BslDiagnostic {

	public static void analyze(EObject deltaObject, Configuration configuration) {
		// TODO Автоматически созданная заглушка метода
	}

	public static boolean needValidation(EObject object) {
		return false;
	}

	public static void validate(EObject object, CustomValidationMessageAcceptor messageAcceptor) {
		// TODO Автоматически созданная заглушка метода

	}

	private DataExchangeCommonCommandsSourcesDiagnostic() {
		throw new IllegalStateException(Messages.BslDiagnostic_InternalClass);
	}
}
